# Byte-compiled / optimized / DLL files# Byte-compiled / optimized / DLL files

__pycache__/__pycache__/

*.py[cod]*.py[cod]

*$py.class*$py.class



# C extensions# C extensions

*.so*.so



# Distribution / packaging# Distribution / packaging

.Python.Python

build/build/

develop-eggs/develop-eggs/

dist/dist/

downloads/downloads/

eggs/eggs/

.eggs/.eggs/

lib/lib/

lib64/lib64/

parts/parts/

sdist/sdist/

var/var/

wheels/wheels/

pip-wheel-metadata/pip-wheel-metadata/

share/python-wheels/share/python-wheels/

*.egg-info/*.egg-info/

.installed.cfg.installed.cfg

*.egg*.egg

MANIFESTMANIFEST



# PyInstaller# PyInstaller

#  Usually these files are written by a python script from a template*.manifest

#  before PyInstaller builds the exe, so as to inject date/other infos into it.*.spec

*.manifest

*.spec# Installer logs

pip-log.txt

# Installer logspip-delete-this-directory.txt

pip-log.txt

pip-delete-this-directory.txt# Unit test / coverage reports

htmlcov/

# Unit test / coverage reports.tox/

htmlcov/.nox/

.tox/.coverage

.nox/.coverage.*

.coverage.cache

.coverage.*nosetests.xml

.cachecoverage.xml

nosetests.xml*.cover

coverage.xml*.py,cover

*.cover.hypothesis/

*.py,cover.pytest_cache/

.hypothesis/

.pytest_cache/# Translations

*.mo

# Translations*.pot

*.mo

*.pot# Django stuff:

*.log

# Django stuff:local_settings.py

*.logdb.sqlite3

local_settings.pydb.sqlite3-journal

db.sqlite3

db.sqlite3-journal# Flask stuff:

instance/

# Flask stuff:.webassets-cache

instance/

.webassets-cache# Scrapy stuff:

.scrapy

# Scrapy stuff:

.scrapy# Sphinx documentation

docs/_build/

# Sphinx documentation

docs/_build/# PyBuilder

target/

# PyBuilder

target/# Jupyter Notebook

.ipynb_checkpoints

# Jupyter Notebook

.ipynb_checkpoints# IPython

profile_default/

# IPythonipython_config.py

profile_default/

ipython_config.py# pyenv

.python-version

# pyenv

.python-version# pipenv

Pipfile.lock

# pipenv

#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.# PEP 582

#   However, in case of collaboration, if having platform-specific dependencies or dependencies__pypackages__/

#   having no cross-platform support, pipenv may install dependencies that don't work, or not

#   install all needed dependencies.# Celery stuff

#Pipfile.lockcelerybeat-schedule

celerybeat.pid

# PEP 582; used by e.g. github.com/David-OConnor/pyflow

__pypackages__/# SageMath parsed files

*.sage.py

# Celery stuff

celerybeat-schedule# Environments

celerybeat.pid.env

.venv

# SageMath parsed filesenv/

*.sage.pyvenv/

ENV/

# Environmentsenv.bak/

.envvenv.bak/

.venv

env/# Spyder project settings

venv/.spyderproject

ENV/.spyproject

env.bak/

venv.bak/# Rope project settings

.ropeproject

# Spyder project settings

.spyderproject# mkdocs documentation

.spyproject/site



# Rope project settings# mypy

.ropeproject.mypy_cache/

.dmypy.json

# mkdocs documentationdmypy.json

/site

# Pyre type checker

# mypy.pyre/

.mypy_cache/

.dmypy.json# VS Code

dmypy.json.vscode/



# Pyre type checker# Windows

.pyre/Thumbs.db

ehthumbs.db

# Project specificDesktop.ini

src/logs/$RECYCLE.BIN/

*.log

temp/# macOS

temp_*/.DS_Store

test_*/.AppleDouble

debug_*/.LSOverride

backup_*/

# Temporary files

# OS specific*.tmp

.DS_Store*.temp

Thumbs.db*~

Desktop.ini

# Model files (optional - comment out if you want to include trained models)

# IDEs# trainer/trainer.yml

.vscode/

.idea/# Large dataset images (optional - you might want to keep some sample images)

*.swp# dataset/*.jpg

*.swo# dataset/*.jpeg

*~# dataset/*.png

# Face recognition data (optional - comment out if you want to version control)
# data/dataset/*.jpg
# data/trainer/*.npy
# data/trainer/*.yml